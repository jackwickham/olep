/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Add the errorprone Gradle plugin so the checks are run during compile
    id("net.ltgt.errorprone") version "0.6"
}

// Targeting Java 11
sourceCompatibility = 11
targetCompatibility = 11

// Define the main class for the application
mainClassName = 'net.jackw.olep.application.TestApplication'

dependencies {
    // Guava for lots of utilities
    compile 'com.google.guava:guava:27.0-jre'
    // Kafka is split into several parts
    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.0.0'
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.0.0'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'
    // JSON/etc library
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.7'
    // Akka for scheduling within the application
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.17'
    // Log4j for loggging
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.7.25'

    // Expose the errorprone client library to the application
    compile group: 'com.google.errorprone', name: 'error_prone_core', version: '2.3.2'
    errorprone("com.google.errorprone:error_prone_core:2.3.2")

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    // And mockito for mocking and spying on stuff
    testCompile "org.mockito:mockito-core:2.+"
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

task runVerifier(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.jackw.olep.verifier.VerifierApp"
}

task runApplication(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.jackw.olep.application.TestApplication"
}

task runWorker(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.jackw.olep.transaction_worker.WorkerApp"
}

task runPopulateStores(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.jackw.olep.utils.immutable_stores.PopulateStores"
}

task createTopics(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.jackw.olep.utils.ClusterCreator"
}
